//React.EventHandler<HTMLInputElemet>
import React, { useState, useEffect, SetStateAction } from "react"
import 'bootstrap/dist/css/bootstrap.min.css';
import 'bootstrap/dist/js/bootstrap.min.js'
import OverlayTrigger from 'react-bootstrap/OverlayTrigger';
import Button from 'react-bootstrap/Button';
import Popover from 'react-bootstrap/Popover';
import './admin.css'

import { IAdmin, IAdminWithStack } from "../../typings"
import { getAdmins, ResponseDataType, deleteAdminData, updateAdminData, updateAdminActivationStatus, presentAlert } from "../../utils/adminApi"
import { EditAdmin } from "./AdminEdit";

export function AdminManagement(){
    const [admins, setAdmins ] = useState([] as IAdminWithStack[]);
    const [actionMessage, setActionMessage ] = useState('');
    
    useEffect(() => {
        //( async () => { const loadedAdims: ResponseDataType<IAdmin[], unknown> = await getAdmins()})();
        getAdmins().then((res) => {
            setAdmins(res.data)
        }).catch((err) => {})
    }, [actionMessage])
    
   

    function changeAdminActivationStatus(status: string, adminId: string, adminName: string){
        const title = status === "deactivate" ? "Activate Admin" : "Deactivate Admin";
        
        presentAlert(title, `This action is on, ${adminName}`, console.log, 'fired').then(function () {
              updateAdminActivationStatus(status, adminId).then((data: ResponseDataType<IAdmin, unknown>) => {
                presentAlert( "Done!", `${adminName}'s ${status} Done!`, console.log, "success")
                setActionMessage(`${adminName} status updated successfully`)
              }).catch((ERR) => {
                  presentAlert('failed', 'failed to complete action', console.log, 'failed');
              })
            });
    }

    function deleteAdmin(adminId: string, adminName: string){
        const title = "Delete Admin";
        
        presentAlert(title, `This action is on, ${adminName}`, console.log, 'fired').then(function () {
              deleteAdminData(adminId).then((data: ResponseDataType<boolean, string>) => {
                presentAlert( "Done!", `${adminName}' deletion Done!`, console.log, "success")
                setActionMessage(`${adminName} status updated successfully`)
              }).catch((ERR) => {
                  presentAlert('failed', 'failed to complete action', console.log, 'failed');
              })
        });

    }

    function triggerEditModal(adminId: string){
        try{
            let d = document.getElementById(`triggeredit${adminId}`);
            console.log(d?.id + 'is id');
            d?.click()
            setActionMessage('Done')
        }catch(e){
            console.log(JSON.stringify(e))
        }
        
    }


    
    return (
        <div className="container">
            <div className="row text-center my-5">
                <h6>{actionMessage}</h6>
            </div>
            <div className="row">
                <div className="col table table-responsive">
                    <table className="table table-responsive">
                        <thead>
                            <tr>

                                <td>SN</td>
                                <td>Admin Name </td>
                                <td>Email</td>
                                <td>Assgned Role</td>
                                <td> Stack</td>
                                <td>Squad</td>
                                <td>Actions</td>
                            </tr>
                        </thead>
                        <tbody>
                            {
                                admins.map((admin, index) => {
                                    return (
                                        <tr>
                                        <td>{index+=1}</td>
                                        <td>{admin.firstname}, {admin.lastname} </td>
                                        <td>{admin.email}</td>
                                        <td>{ admin.role} </td>
                                        <td>{`SQ0${admin.squad}`}</td>
                                        <td>
                                            <OverlayTrigger trigger="click" rootClose placement="left" overlay={(
                                                <Popover id={`sp${admin._id}`} style={{minWidth: 300}} >
                                                    <Popover.Content>
                                                        <div className="row popover-container">
                                                        <div className="btn popover-btn" onClick={()=> { triggerEditModal(`${admin._id}`) }}> Edit </div>
                                                        {
                                                            admin.activationStatus ?
                                                             <div className="btn popover-btn" onClick={()=> {changeAdminActivationStatus("deactivate", `${admin._id}`, `${admin.firstname}`)}}> Dectivate </div> :
                                                              <div className="btn popover-btn" onClick={()=> {changeAdminActivationStatus("activate", `${admin._id}`, `${admin.firstname}`)}}> Activate </div>
                                                        }
                                                        
                                                        <div className="btn popover-btn"onClick={()=> {deleteAdmin( `${admin._id}`, `${admin.firstname}`)}}> Delete </div>
                                                        </div>
                                                    </Popover.Content>
                                                </Popover>
                                            )}>
                                                <Button variant="succes">
                                                    <i className="fa fa-ellipsis-h" aria-hidden="true"></i>
                                                </Button>
                                            </OverlayTrigger>



                                                <button hidden={true} id={`triggeredit${admin._id}`} type="button" className="btn btn-primary" data-bs-toggle="modal" data-bs-target={`#edit${admin._id}`}>
                                                    Open modal
                                                </button>

                                                <div className="modal" id={`edit${admin._id}`}>
                                                
                                                    <div className="modal-dialog">
                                                        <div className="modal-content">

                                                        <div className="modal-header">
                                                            <button type="button" className="btn-close" data-bs-dismiss="modal" onClick={(e)=> { setActionMessage('')}}></button>
                                                        </div>

                                                        <div className="modal-body">
                                                            <EditAdmin admin={admin} />
                                                        </div>

                                                        

                                                        </div>
                                                    </div>
                                                </div>



                                        </td>
                                        
                                        
                                        
                                        
                                        
                                    </tr>
                                    )
                                })
                            }
                            
                        </tbody>
                    </table>
                    <div>
                    </div>
                </div>
            </div>
            
            
            
             
        </div>

       
    )
}
